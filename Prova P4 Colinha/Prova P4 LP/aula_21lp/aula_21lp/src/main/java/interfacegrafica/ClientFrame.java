/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfacegrafica;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

import cliente.SimpleClientTest;
import servidor.SimpleServerTest;

/**
 *
 * @author rapha
 */
public class ClientFrame extends javax.swing.JFrame {
    private SimpleClientTest client;

    Thread receber_mensagem = new Thread(new Runnable() {
        @Override
        public void run() {
            try {
            BufferedReader in = new BufferedReader(new InputStreamReader(client.getCliente().getInputStream()));
            String message;
            while (client.getCliente().isConnected()) {
                message = in.readLine();
                jTextAreaMensagens.append("Mensagem do servidor: " + message + "\n");
            }
            
            } catch (IOException ex) {
                jTextAreaMensagens.append(ex.getMessage() + "\n");
            }
        }
    });

    Thread verificar_conexcao = new Thread(new Runnable() {
        @Override
        public void run() {
            try {
            BufferedReader in = new BufferedReader(new InputStreamReader(client.getCliente().getInputStream()));
            String message;
            while (client.getCliente().isConnected()) {
                message = in.readLine();
                jTextAreaMensagens.append("Mensagem do servidor: " + message + "\n");
            }
            
            } catch (IOException ex) {
                jTextAreaMensagens.append(ex.getMessage() + "\n");
            }
        }
    });


    /**
     * Creates new form ServidorFrame
     */
    public ClientFrame() {
        super("Mensagem para servidor");
        initComponents();
        setVisible(true);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        try {
            client = new SimpleClientTest();
            jTextAreaMensagens.append("Cliente conectado ao servidor " + SimpleServerTest.endereco + ":" + SimpleServerTest.porta + "\n");
        } catch (IOException ex) {
            jTextAreaMensagens.append("Erro: " + ex.getMessage() + "\n");
            JOptionPane.showMessageDialog(null, "Erro ao conectar ao servidor!");
            System.exit(0);
        }
        receber_mensagem.start();	
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonEnviar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMensagens = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel = new javax.swing.JLabel();
        jTextFieldMensagem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonEnviar.setText("Enviar");
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEnviar);

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonLimpar);

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSair);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jTextAreaMensagens.setEditable(false);
        jTextAreaMensagens.setColumns(40);
        jTextAreaMensagens.setRows(6);
        jTextAreaMensagens.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(jTextAreaMensagens);

        jPanel3.add(jScrollPane1);

        getContentPane().add(jPanel3, java.awt.BorderLayout.EAST);
 
        jLabel.setText("Mensagem: ");
        jPanel2.add(jLabel);

        jTextFieldMensagem.setColumns(10);
        jTextFieldMensagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMensagemActionPerformed(evt);
            }
        });
        jPanel2.add(jTextFieldMensagem);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);
        jPanel2.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        try {
            client.Terminar_conecao();
        } catch (IOException ex) {
            jTextAreaMensagens.append("Erro: " + ex.getMessage() + "\n");
        }
        jTextAreaMensagens.append("Finalizando Conexao!\n");
        JOptionPane.showMessageDialog(null, "Saindo do programa!");
        System.exit(0);
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jTextFieldMensagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMensagemActionPerformed
        enviar_mensagem();
    }//GEN-LAST:event_jTextFieldMensagemActionPerformed

    private void jButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarActionPerformed
        enviar_mensagem();
    }//GEN-LAST:event_jButtonEnviarActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        jTextFieldMensagem.setText("");
        jTextAreaMensagens.setText("");
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void enviar_mensagem(){
        try {
            jTextAreaMensagens.append("Enviando mensagem para o servidor: " + jTextFieldMensagem.getText() + "\n");
            client.enviaMensagem(jTextFieldMensagem.getText());
            jTextFieldMensagem.setText("");
        } catch (IOException ex) {
            jTextAreaMensagens.append("Erro: " + ex.getMessage() + "\n");
        }
    }

    /*private void receber_mensagem(){
        try {
            BufferedReader in = new BufferedReader(new InputStreamReader(client.getCliente().getInputStream()));
            String message;
            while (client.getCliente().isConnected()) {
                message = in.readLine();
                jTextAreaMensagens.append("Mensagem do servidor: " + message + "\n");
            }
            
        } catch (IOException ex) {
            jTextAreaMensagens.append(ex.getMessage() + "\n");
        }
    }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientFrame();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEnviar;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JLabel jLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaMensagens;
    private javax.swing.JTextField jTextFieldMensagem;
    // End of variables declaration//GEN-END:variables
}
